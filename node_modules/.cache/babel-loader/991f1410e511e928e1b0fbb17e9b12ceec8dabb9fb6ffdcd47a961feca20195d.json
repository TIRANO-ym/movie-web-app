{"ast":null,"code":"var _jsxFileName = \"F:\\\\WebProject\\\\movie-web-app\\\\src\\\\components\\\\Movie.js\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./Movie.css\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movie({\n  id,\n  coverImg,\n  title,\n  summary,\n  genres\n}) {\n  _s();\n  const [showCover, setShowCover] = useState(false);\n  const hoverEvent = e => {\n    if (!showCover) {\n      setShowCover(true);\n    }\n    console.log('?');\n  };\n  const hoverOutEvent = e => {\n    if (showCover) {\n      setShowCover(false);\n    }\n  };\n  const ImageCover = /*#__PURE__*/React.memo(() => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image_cover\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"detail_button\",\n        children: \"Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie_card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/movie/${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"image_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coverImg,\n          onMouseEnter: hoverEvent,\n          onMouseLeave: hoverOutEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), showCover && /*#__PURE__*/_jsxDEV(ImageCover, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie_title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), summary && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tag_box\",\n      children: genres.map((g, gi) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        children: g\n      }, gi, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Movie, \"CETcW5XDBQdRS/VRjWXblFQ8Q2c=\");\n_c = Movie;\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  coverImg: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["PropTypes","Link","useEffect","useState","React","jsxDEV","_jsxDEV","Movie","id","coverImg","title","summary","genres","_s","showCover","setShowCover","hoverEvent","e","console","log","hoverOutEvent","ImageCover","memo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","class","src","onMouseEnter","onMouseLeave","map","g","gi","_c","propTypes","number","isRequired","string","arrayOf","$RefreshReg$"],"sources":["F:/WebProject/movie-web-app/src/components/Movie.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Movie.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nfunction Movie({ id, coverImg, title, summary, genres }) {\r\n  const [showCover, setShowCover] = useState(false);\r\n  const hoverEvent = (e) => {\r\n    if (!showCover) {\r\n      setShowCover(true);\r\n    }\r\n    console.log('?');\r\n  }\r\n  const hoverOutEvent = (e) => {\r\n    if (showCover) {\r\n      setShowCover(false);\r\n    }\r\n  }\r\n\r\n  const ImageCover = React.memo(() => {\r\n    return (\r\n      <div className=\"image_cover\">\r\n        <button className=\"detail_button\">Detail</button>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"movie_card\">\r\n      <Link to={`/movie/${id}`}>\r\n      <span class=\"image_box\">\r\n        <img\r\n          src={coverImg}\r\n          onMouseEnter={hoverEvent}\r\n          onMouseLeave={hoverOutEvent}\r\n        />\r\n        {showCover && <ImageCover/>}\r\n      </span>\r\n      </Link>\r\n      <div className=\"movie_title\">{title}</div>\r\n      { summary && <p>{summary}</p>}\r\n      <div className=\"tag_box\">\r\n        { genres.map((g, gi) => <span key={gi} className=\"tag\">{g}</span>) }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  coverImg: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}